class K{constructor(){this.i=document.getElementById('searchInput');this.r=document.getElementById('results');this.s=document.getElementById('searchStatus');this.m=document.getElementById('contentModal');this.t=document.getElementById('modalTitle');this.c=document.getElementById('modalContent');this.x=document.getElementById('closeModal');this.o=null;this.sel=0;this.cards=[];this.stack=[];this.activeCard=null;this.isDragging=false;this.dragStartX=0;this.dragStartY=0;this.init()}init(){this.i.oninput=()=>this.h();this.x.onclick=()=>this.hide();this.m.onclick=e=>e.target===this.m&&this.hide();onkeydown=e=>this.key(e);this.restore()}key(e){if(e.key=='Escape'){this.hide();return}if(e.target!=this.i)return;if(this.cards.length&&e.key=='ArrowDown'){e.preventDefault();this.sel=Math.min(this.sel+1,this.cards.length-1);this.hl()}else if(this.cards.length&&e.key=='ArrowUp'){e.preventDefault();this.sel=Math.max(this.sel-1,0);this.hl()}else if(this.cards.length&&e.key=='Enter'){e.preventDefault();this.show(this.cards[this.sel].file)}}hl(){this.cards.forEach((c,i)=>c.el.classList.toggle('selected',i==this.sel))}restore(){const u=new URL(location);const q=u.searchParams.get('q');if(q){this.i.value=q;this.h()}}h(){clearTimeout(this.o);const q=this.i.value.trim();if(!q){this.w();this.s.textContent='ready';return}this.s.textContent='analyzing...';this.o=setTimeout(()=>this.p(q),300)}async p(q){try{const r=await fetch(`/search?q=${encodeURIComponent(q)}`);const d=await r.json();this.d(d,q)}catch(e){this.s.textContent='error'}finally{this.s.textContent='ready'}}d(r,q){this.sel=0;if(!r.length){this.r.innerHTML=`<div class="no-results"><h3>no results</h3><p>try different terms</p></div>`;history.replaceState({},'','/');return}this.r.innerHTML='';this.cards=r.map((x,i)=>this.createCard(x,i));this.updateStack();history.replaceState({},'',`?q=${encodeURIComponent(q)}`)}createCard(data,index){const el=document.createElement('div');el.className='doc-card';el.innerHTML=`<div class="card-title">${this.e(data.title)}</div><div class="card-preview">${this.e(data.content.substring(0,50))}...</div><div class="card-score">${Math.round(data.similarity*100)}%</div>`;const card={el,data,index,xPos:0,isDragging:false};el.onclick=()=>this.show(data.file);el.onmousedown=e=>this.startDrag(e,card);this.r.appendChild(el);return card}startDrag(e,card){e.preventDefault();this.isDragging=true;card.isDragging=true;this.dragStartX=e.clientX;this.dragStartY=e.clientY;const rect=this.r.getBoundingClientRect();const onMove=e=>{if(!this.isDragging)return;const deltaX=e.clientX-this.dragStartX;card.xPos=Math.max(0,Math.min(100,deltaX*0.3));this.updateCardPosition(card);this.updateStack()};const onEnd=()=>{document.removeEventListener('mousemove',onMove);document.removeEventListener('mouseup',onEnd);this.isDragging=false;card.isDragging=false;if(card.xPos>50){this.removeCard(card)}else{card.xPos=0;this.updateCardPosition(card)}this.updateStack()};document.addEventListener('mousemove',onMove);document.addEventListener('mouseup',onEnd)}removeCard(card){const idx=this.cards.indexOf(card);if(idx>-1){this.cards.splice(idx,1);card.el.remove();this.updateStack()}}updateStack(){this.stack=this.cards.map((c,i)=>({...c,stackIndex:i}));this.cards.forEach((card,i)=>this.updateCardPosition(card))}updateCardPosition(card){const i=this.cards.indexOf(card);const stackIdx=i;const isTop=stackIdx===0;const scale=isTop?1:this.range(Math.max(0,card.xPos),[0,69],[2.5,1]);const opacity=isTop?1:this.range(Math.max(0,card.xPos),[0,69],[0,1]);const baseOffsetY=stackIdx*-12;const baseOffsetX=stackIdx*6;const baseRotation=(stackIdx%2?-1:1)*stackIdx*2;const dragOffsetY=this.range(card.xPos,[0,69],[0,-30]);const dragOffsetX=this.range(card.xPos,[0,69],[0,40]);const dragRotation=this.range(card.xPos,[0,69],[0,15])*(stackIdx%2?-1:1);const finalY=baseOffsetY+dragOffsetY;const finalX=baseOffsetX+dragOffsetX;const finalRotation=baseRotation+dragRotation;card.el.style.transform=`translate(calc(-50% + ${finalX}px), calc(-50% + ${finalY}px)) rotate(${finalRotation}deg) scale(${scale})`;card.el.style.opacity=Math.max(0,Math.min(1,opacity));card.el.style.zIndex=isTop?100:10-stackIdx;card.el.style.transition=card.isDragging?'none':'all 0.3s cubic-bezier(0.175,0.885,0.32,1.275)'}range(val,r1,r2){return((val-r1[0])*(r2[1]-r2[0]))/(r1[1]-r1[0])+r2[0]}w(){this.r.innerHTML=`<div class="welcome"><h3>semantic search</h3><p>contextual understanding</p><div class="features"><span class="feature">ai-powered</span><span class="feature">instant</span><span class="feature">private</span></div></div>`}async show(f){try{const r=await fetch(`/content/${encodeURIComponent(f)}`);const d=await r.json();if(d.error)return;this.t.textContent=d.title;this.c.innerHTML=d.content;this.m.style.display='block';document.body.style.overflow='hidden'}catch(e){}}hide(){this.m.style.display='none';document.body.style.overflow=''}e(t){const d=document.createElement('div');d.textContent=t;return d.innerHTML}}const k=new K();


