<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Educational Stacked Cards</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap');
        
        :root {
            --pastel-blue: #A2D2FF;
            --pastel-pink: #FFC8DD;
            --pastel-yellow: #FDFFB6;
            --pastel-green: #CAFFBF;
            --pastel-purple: #BDB2FF;
            --card-radius: 18px;
            --shadow: 0 10px 20px rgba(0,0,0,0.1);
            --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Nunito', sans-serif;
            background-color: #f9f9f9;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 700px;
            padding: 20px;
            overflow-x: hidden;
        }
        
        .container {
            width: 100%;
            max-width: 700px;
            padding: 20px;
            position: relative;
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
            position: relative;
            z-index: 5;
        }
        
        .header h1 {
            font-size: 28px;
            color: #333;
            margin-bottom: 10px;
            position: relative;
            display: inline-block;
        }
        
        .header h1:after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 100%;
            height: 10px;
            background-color: var(--pastel-yellow);
            z-index: -1;
            transform: skew(-5deg);
            opacity: 0.8;
        }
        
        .header p {
            font-size: 16px;
            color: #666;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .cards-container {
            position: relative;
            margin-top: 50px;
            height: 450px;
            perspective: 1000px;
        }
        
        .card {
            position: absolute;
            width: 80%;
            height: 120px;
            background: white;
            border-radius: var(--card-radius);
            box-shadow: var(--shadow);
            padding: 20px;
            overflow: hidden;
            cursor: pointer;
            transition: var(--transition);
            transform-origin: center bottom;
            left: 10%;
            transform-style: preserve-3d;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        
        .card-title {
            font-weight: 700;
            font-size: 18px;
            color: #333;
            margin-bottom: 8px;
            position: relative;
            z-index: 2;
        }
        
        .card-preview {
            color: #666;
            font-size: 14px;
            margin-bottom: 5px;
            line-height: 1.4;
            position: relative;
            z-index: 2;
        }
        
        .card-icon {
            position: absolute;
            top: 20px;
            right: 20px;
            font-size: 24px;
            color: rgba(0,0,0,0.1);
            transition: var(--transition);
        }
        
        .card-content {
            height: 0;
            opacity: 0;
            overflow: hidden;
            transition: var(--transition);
            margin-top: 10px;
            position: relative;
            z-index: 2;
        }
        
        .card-hint {
            font-size: 13px;
            color: #888;
            position: absolute;
            bottom: 15px;
            right: 15px;
            opacity: 0.7;
        }
        
        .card-progress {
            position: absolute;
            bottom: 0;
            left: 0;
            height: 5px;
            width: 0;
            transition: width 0.3s ease;
        }
        
        .card.expanded {
            transform: translateY(0) scale(1) !important;
            height: 320px;
            z-index: 10;
        }
        
        .card.expanded .card-content {
            height: auto;
            opacity: 1;
            margin-top: 20px;
        }
        
        .card.expanded .card-icon {
            transform: rotate(180deg);
        }
        
        .card.expanded .card-hint {
            opacity: 0;
        }

        .card:nth-child(1) {
            background: linear-gradient(135deg, white 85%, var(--pastel-blue) 100%);
            transform: translateY(0px) scale(1);
            z-index: 5;
        }
        
        .card:nth-child(2) {
            background: linear-gradient(135deg, white 85%, var(--pastel-pink) 100%);
            transform: translateY(60px) scale(0.97);
            z-index: 4;
        }
        
        .card:nth-child(3) {
            background: linear-gradient(135deg, white 85%, var(--pastel-yellow) 100%);
            transform: translateY(110px) scale(0.94);
            z-index: 3;
        }
        
        .card:nth-child(4) {
            background: linear-gradient(135deg, white 85%, var(--pastel-green) 100%);
            transform: translateY(150px) scale(0.91);
            z-index: 2;
        }
        
        .card:nth-child(5) {
            background: linear-gradient(135deg, white 85%, var(--pastel-purple) 100%);
            transform: translateY(180px) scale(0.88);
            z-index: 1;
        }
        
        .card:nth-child(1) .card-progress { background-color: var(--pastel-blue); }
        .card:nth-child(2) .card-progress { background-color: var(--pastel-pink); }
        .card:nth-child(3) .card-progress { background-color: var(--pastel-yellow); }
        .card:nth-child(4) .card-progress { background-color: var(--pastel-green); }
        .card:nth-child(5) .card-progress { background-color: var(--pastel-purple); }
        
        .card:not(.expanded):hover {
            transform: translateY(0) scale(1.02) !important;
            box-shadow: 0 15px 30px rgba(0,0,0,0.15);
        }
        
        .card-content ul {
            padding-left: 20px;
            margin-bottom: 15px;
        }
        
        .card-content li {
            margin-bottom: 8px;
            position: relative;
        }
        
        .card-content li::before {
            content: 'â€¢';
            position: absolute;
            left: -15px;
            color: #888;
        }
        
        .module-nav {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }
        
        .btn {
            padding: 8px 15px;
            border: none;
            border-radius: 20px;
            font-family: 'Nunito', sans-serif;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            outline: none;
        }
        
        .btn:focus {
            outline: none;
        }
        
        .btn-primary {
            background-color: #333;
            color: white;
        }
        
        .btn-primary:hover {
            background-color: #222;
            transform: translateY(-2px);
            box-shadow: 0 5px 10px rgba(0,0,0,0.1);
        }
        
        .btn-outline {
            background-color: transparent;
            border: 1px solid #ccc;
            color: #666;
        }
        
        .btn-outline:hover {
            background-color: #f5f5f5;
            border-color: #999;
        }
        
        .floating-shapes {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
            opacity: 0.5;
            overflow: hidden;
        }
        
        .shape {
            position: absolute;
            opacity: 0.1;
            border-radius: 50%;
        }
        
        @keyframes float {
            0% { transform: translate(0, 0) rotate(0deg); }
            100% { transform: translate(20px, 20px) rotate(360deg); }
        }
        
        .progress-indicator {
            display: flex;
            justify-content: center;
            margin-top: 10px;
            position: relative;
            z-index: 5;
        }
        
        .progress-dot {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: #ddd;
            margin: 0 5px;
            transition: all 0.3s ease;
        }
        
        .progress-dot.active {
            background: #333;
            transform: scale(1.2);
        }
        
        .progress-label {
            font-size: 14px;
            color: #888;
            text-align: center;
            margin-top: 5px;
        }
        
        @media (max-width: 600px) {
            .header h1 {
                font-size: 24px;
            }
            
            .header p {
                font-size: 14px;
            }
            
            .card {
                padding: 15px;
                width: 90%;
                left: 5%;
            }
            
            .card-title {
                font-size: 16px;
            }
            
            .card-preview {
                font-size: 13px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Interactive Learning Path</h1>
            <p>Explore our carefully crafted modules designed to build your skills progressively. Tap any card to dive deeper.</p>
        </div>
        
        <div class="cards-container">
            <div class="floating-shapes">
                <!-- Floating shapes are added via JavaScript -->
            </div>
            
            <div class="card">
                <div>
                    <h3 class="card-title">Foundations of Design Thinking</h3>
                    <p class="card-preview">Learn the core principles of human-centered design and creative problem-solving.</p>
                </div>
                <div class="card-content">
                    <p>This introductory module covers the essential mindsets and methodologies that drive effective design thinking.</p>
                    <ul>
                        <li>Understanding empathy in the design process</li>
                        <li>Framing problems as opportunities</li>
                        <li>Iterative prototyping techniques</li>
                        <li>Real-world case studies of design thinking success</li>
                    </ul>
                    <div class="module-nav">
                        <button class="btn btn-outline close-card">Close</button>
                        <button class="btn btn-primary">Start Learning</button>
                    </div>
                </div>
                <span class="card-icon">â†“</span>
                <span class="card-hint">Tap to expand</span>
                <div class="card-progress"></div>
            </div>
            
            <div class="card">
                <div>
                    <h3 class="card-title">Visual Communication Basics</h3>
                    <p class="card-preview">Master the fundamental elements of visual hierarchy, typography, and color theory.</p>
                </div>
                <div class="card-content">
                    <p>Develop a designer's eye and learn how to communicate effectively through visual elements.</p>
                    <ul>
                        <li>Creating meaningful visual hierarchies</li>
                        <li>Typography selection and pairing</li>
                        <li>Color psychology and accessible palettes</li>
                        <li>Composition and layout principles</li>
                    </ul>
                    <div class="module-nav">
                        <button class="btn btn-outline close-card">Close</button>
                        <button class="btn btn-primary">Start Learning</button>
                    </div>
                </div>
                <span class="card-icon">â†“</span>
                <span class="card-hint">Tap to expand</span>
                <div class="card-progress"></div>
            </div>
            
            <div class="card">
                <div>
                    <h3 class="card-title">User Research Techniques</h3>
                    <p class="card-preview">Discover practical methods to understand your users' needs, behaviors, and motivations.</p>
                </div>
                <div class="card-content">
                    <p>Learn to gather meaningful insights that inform design decisions and create more user-centered products.</p>
                    <ul>
                        <li>Conducting effective user interviews</li>
                        <li>Creating and using personas</li>
                        <li>Journey mapping and experience analysis</li>
                        <li>Translating research into actionable design briefs</li>
                    </ul>
                    <div class="module-nav">
                        <button class="btn btn-outline close-card">Close</button>
                        <button class="btn btn-primary">Start Learning</button>
                    </div>
                </div>
                <span class="card-icon">â†“</span>
                <span class="card-hint">Tap to expand</span>
                <div class="card-progress"></div>
            </div>
            
            <div class="card">
                <div>
                    <h3 class="card-title">Prototyping Methods</h3>
                    <p class="card-preview">Learn to build effective low and high-fidelity prototypes to test and refine your ideas.</p>
                </div>
                <div class="card-content">
                    <p>Explore various prototyping techniques and learn when to apply each for maximum impact.</p>
                    <ul>
                        <li>Paper prototyping for early concepts</li>
                        <li>Digital prototyping tools and workflows</li>
                        <li>Testing methodologies for different fidelities</li>
                        <li>Iterative refinement based on feedback</li>
                    </ul>
                    <div class="module-nav">
                        <button class="btn btn-outline close-card">Close</button>
                        <button class="btn btn-primary">Start Learning</button>
                    </div>
                </div>
                <span class="card-icon">â†“</span>
                <span class="card-hint">Tap to expand</span>
                <div class="card-progress"></div>
            </div>
            
            <div class="card">
                <div>
                    <h3 class="card-title">Design Systems & Documentation</h3>
                    <p class="card-preview">Build scalable design systems that maintain consistency across products and teams.</p>
                </div>
                <div class="card-content">
                    <p>Understand how to create and maintain effective design systems that scale with your organization.</p>
                    <ul>
                        <li>Component libraries and atomic design</li>
                        <li>Documentation best practices</li>
                        <li>Design tokens and variables</li>
                        <li>Collaboration between design and development</li>
                    </ul>
                    <div class="module-nav">
                        <button class="btn btn-outline close-card">Close</button>
                        <button class="btn btn-primary">Start Learning</button>
                    </div>
                </div>
                <span class="card-icon">â†“</span>
                <span class="card-hint">Tap to expand</span>
                <div class="card-progress"></div>
            </div>
        </div>
        
        <div class="progress-indicator">
            <div class="progress-dot active"></div>
            <div class="progress-dot"></div>
            <div class="progress-dot"></div>
            <div class="progress-dot"></div>
            <div class="progress-dot"></div>
        </div>
        <div class="progress-label">1 of 5 modules completed</div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.card');
            const progressDots = document.querySelectorAll('.progress-dot');
            const progressLabel = document.querySelector('.progress-label');
            const container = document.querySelector('.floating-shapes');
            
            // Create floating shapes
            for (let i = 0; i < 15; i++) {
                const shape = document.createElement('div');
                shape.classList.add('shape');
                
                // Random properties
                const size = Math.random() * 60 + 20;
                const posX = Math.random() * 100;
                const posY = Math.random() * 100;
                const color = i % 5 === 0 ? '#A2D2FF' : 
                              i % 5 === 1 ? '#FFC8DD' :
                              i % 5 === 2 ? '#FDFFB6' :
                              i % 5 === 3 ? '#CAFFBF' : '#BDB2FF';
                const duration = Math.random() * 20 + 10;
                const delay = Math.random() * 5;
                
                // Apply styles
                shape.style.width = `${size}px`;
                shape.style.height = `${size}px`;
                shape.style.top = `${posY}%`;
                shape.style.left = `${posX}%`;
                shape.style.backgroundColor = color;
                shape.style.animation = `float ${duration}s ease-in-out ${delay}s infinite alternate`;
                
                container.appendChild(shape);
            }
            
            // Card expansion/collapse functionality
            cards.forEach((card, index) => {
                // Set progress for first card
                if (index === 0) {
                    setTimeout(() => {
                        card.querySelector('.card-progress').style.width = '100%';
                    }, 1000);
                }
                
                card.addEventListener('click', function(e) {
                    // Don't close if clicking on the close button
                    if (e.target.classList.contains('close-card') || 
                        e.target.closest('.close-card')) {
                        return;
                    }
                    
                    const isExpanded = this.classList.contains('expanded');
                    
                    // Close all cards first
                    cards.forEach(c => {
                        c.classList.remove('expanded');
                    });
                    
                    // If the card wasn't expanded, expand it
                    if (!isExpanded) {
                        this.classList.add('expanded');
                    }
                });
                
                // Close button functionality
                const closeBtn = card.querySelector('.close-card');
                if (closeBtn) {
                    closeBtn.addEventListener('click', function(e) {
                        e.stopPropagation();
                        card.classList.remove('expanded');
                    });
                }
                
                // Start learning button - just adding progress for demo
                const startBtn = card.querySelector('.btn-primary');
                if (startBtn) {
                    startBtn.addEventListener('click', function(e) {
                        e.stopPropagation();
                        
                        // Animate progress
                        const progress = card.querySelector('.card-progress');
                        progress.style.width = '100%';
                        
                        // Update progress dots
                        progressDots.forEach((dot, i) => {
                            if (i <= index) {
                                dot.classList.add('active');
                            }
                        });
                        
                        // Update progress label
                        progressLabel.textContent = `${index + 1} of 5 modules completed`;
                        
                        // Close card after a delay
                        setTimeout(() => {
                            card.classList.remove('expanded');
                        }, 1000);
                    });
                }
            });
            
            // Simulate hover effect for touch devices
            cards.forEach(card => {
                card.addEventListener('touchstart', function() {
                    if (!this.classList.contains('expanded')) {
                        this.classList.add('hover-effect');
                    }
                });
                
                card.addEventListener('touchend', function() {
                    this.classList.remove('hover-effect');
                });
            });
        });
    </script>
</body>
</html>